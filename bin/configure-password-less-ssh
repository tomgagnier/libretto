#!/usr/bin/env ruby

USAGE = <<-EOF
configure-password-less-ssh [(-p|--password) password] user@hostname

Configure password-less ssh to a the account specified by user@hostname.

-p|--password password Configure access without a challenge if the the sshpass
                       utility is available.
-h|--help              Show help.
EOF

begin
  until ARGV.empty? do
    case argument = ARGV.shift
      when '-h', '--help'
        puts USAGE
        exit(0)
      when '-p', '--password'
        password = ARGV.shift
      when /^-/
        raise "Unrecognized option: #{argument}"
      else
        userAtHostname = argument
    end
  end

  if userAtHostname.nil?
    raise 'Missing user@hostname'
  end

  unless File.exist?('~/.ssh/id_rsa.pub')
    %x(ssh-keygen -t dsa -N '')
  end

  ssh = "ssh -o StrictHostKeyChecking=no #{userAtHostname}"
  copy_rsa_id = "'mkdir -p ~/.ssh; cat >>~/.ssh/authorized_keys' <~/.ssh/id_rsa.pub"
  sshpass = password.nil? ? '' : "sshpass -p #{password} "

  %x(#{sshpass}#{ssh} #{copy_rsa_id})

rescue RuntimeError => error
  abort "#{error}\n\n#{USAGE}"
end
